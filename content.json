{"meta":{"title":"强大人的小屋","subtitle":"随风而动，随性而为","description":null,"author":"强大人","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-10-10T08:37:05.000Z","updated":"2019-10-10T08:41:52.975Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"半路出家的码农一枚！！"},{"title":"文章分类","date":"2019-10-10T08:04:34.000Z","updated":"2019-10-10T08:06:36.884Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-10-10T08:13:25.000Z","updated":"2019-10-10T08:14:08.874Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Linux 下 Samba 服务器配置samb目录为用户的home目录","slug":"samba服务器配置","date":"2019-10-10T04:49:18.498Z","updated":"2019-10-10T08:18:57.559Z","comments":true,"path":"2019/10/10/samba服务器配置/","link":"","permalink":"http://yoursite.com/2019/10/10/samba服务器配置/","excerpt":"在多用户的使用场景下，为了统一为各个用户配置samba目录，可以将用户的home目录统一配置成samba目录，下面以在ubuntu上配置为例进行说明。1.先要安装Samba1sudo apt-get install samba openssh-server2.编译Samba配置文件","text":"在多用户的使用场景下，为了统一为各个用户配置samba目录，可以将用户的home目录统一配置成samba目录，下面以在ubuntu上配置为例进行说明。1.先要安装Samba1sudo apt-get install samba openssh-server2.编译Samba配置文件 1sudo vi /etc/samba/smb.conf 找到[homes]项，此项默认是注释掉的，取消其注释，然后修改其具体内容，修改成如下： 12345678910111213141516171819[homes] comment = Home Directories browseable = yes# By default, the home directories are exported read-only. Change the# next parameter to 'no' if you want to be able to write to them. read only = no# File creation mask is set to 0700 for security reasons. If you want to# create files with group=rw permissions, set next parameter to 0775. create mask = 0755 #建议将权限修改成0755，这样其它用户只是不能修改# Directory creation mask is set to 0700 for security reasons. If you want to# create dirs. with group=rw permissions, set next parameter to 0775. directory mask = 0755# By default, \\\\server\\username shares can be connected to by anyone# with access to the samba server. Un-comment the following parameter# to make sure that only \"username\" can connect to \\\\server\\username# The following parameter makes sure that only \"username\" can connect## This might need tweaking when using external authentication schemes valid users = %S #本行需要取消注释 如上修改完成后wq保存退出！ 3. 重启samba服务：12sudo service smbd restartsudo service nmbd restart 4. 增加一个现有用户的对应samba帐号：如我已经有一个用户叫dante，现在给dante开通samba帐号(必须设置)： 1sudo smbpasswd -a dante 根据提示输入两次密码即可。 5.现在可以测试了，在Window下按win+r，输入samba地址尝试登录：\\10.0.0.2\\dante 6.此时windows应该会弹出窗口要求输入用户名和密码了，输入吧。Enjoy！","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"samba","slug":"samba","permalink":"http://yoursite.com/tags/samba/"}]},{"title":"使用Github和hexo轻松搭建个人博客","slug":"github+hexo搭建个人博客","date":"2019-10-09T07:56:53.414Z","updated":"2019-10-10T08:15:42.446Z","comments":true,"path":"2019/10/09/github+hexo搭建个人博客/","link":"","permalink":"http://yoursite.com/2019/10/09/github+hexo搭建个人博客/","excerpt":"Github的pages可以方便的搭建个人博客，再结合hexo静态博客框架，可以方便的构建自己的博客系统。安装依赖 git hexo node.js Github 创建仓库创建仓库的名字必须使用 github昵称.githug.io 的格式，如 lordqiang.github.io","text":"Github的pages可以方便的搭建个人博客，再结合hexo静态博客框架，可以方便的构建自己的博客系统。安装依赖 git hexo node.js Github 创建仓库创建仓库的名字必须使用 github昵称.githug.io 的格式，如 lordqiang.github.io Hexo 基本操作Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy 设置hexo远程仓库修改config.yml，打开后滑到最后，修改成下边的样子： deploy: type: git repository: https://github.com/xxx/xxx.github.io.git branch: master 安装git插件 npm install hexo-deployer-git","categories":[{"name":"其他","slug":"其他","permalink":"http://yoursite.com/categories/其他/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"http://yoursite.com/tags/blog/"}]}]}